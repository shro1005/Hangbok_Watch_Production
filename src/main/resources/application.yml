spring:
  profiles:
    active: local # 기본 환경 선택

---

# local 환경  # jdbc:postgresql://localhost:5432/hangbokwatch #kyun #pass
spring:
  profiles: local
#    include: oauth
  mobile:
    devicedelegatingviewresolver:
      enabled: true
  datasource:
    hikari:
      jdbc-url: jdbc:postgresql://localhost:5432/hangbokwatch
      username: kyun
      password: pass
      driver-class-name: org.postgresql.Driver
      connection-timeout: 99999
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.lob.non_contextual_creation: true
    show-sql: false
    hibernate:
      ddl-auto: validate
    generate-ddl: false
  h2:
    console:
      enabled: true
  data:
    cassandra:
      read-timeout: 99999
  batch:
    job:
      enabled: false
  #이미지등 자원 경로
  HWresource:
    HWimages: HangbokWatch_Resource/HWimages/ #/Users/kyun/workspace/Hangbok-Optch/Hangbok_Watch_Production/HangbokWatch_Resource/HWimages/
  security:
    oauth2:
      client:
        registration:
          blizzard:
            client-id: 5a3fed373e524b9c837a5a5afbee9205
            client-secret: K8W12zv26fUE8D5vldBq2cvwJ1Qa1n9g
            redirect-uri: https://localhost:8443/login/oauth2/code/blizzard
#            redirect-uri: https://localhost:8443/oauth2/
            authorization-grant-type: authorization_code
            scope: openid
            client-name: Blizzard
        provider:
          blizzard:
            authorization-uri: https://kr.battle.net/oauth/authorize
            token-uri: https://kr.battle.net/oauth/token
            user-info-uri: https://kr.battle.net/oauth/userinfo
            jwk-set-uri: https://kr.battle.net/oauth/jwks/certs
  #AWS S3 연동
cloud:
  aws:
    s3:
      bucket: hangbok-watch-s3
    region:
      static: ap-northeast-2
    credentials:
      accessKey: AKIAXT7WWNODJ4R2PDR4
      secretKey: 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
    stack:
      auto: false

#로깅 설정
logging:
  # file:
  max-history: 5
  path: HangbokWatch_Resource/LOGS/ #/Users/kyun/workspace/Hangbok-Optch/Hangbok_Watch_Production/HangbokWatch_Resource/LOGS
  level:
    root: info
    com.hangbokwatch.backend.service: debug
    com.hangbokwatch.backend.job: debug
    com.hangbokwatch.backend.config: debug
    org.hibernate: error
    sql: info

#로컬에서 https를 사용하기 위한 ssl 설정 및 포트 설정
server:
  ssl:
    enabled: true
    key-store: keystore.p12
    key-store-password: tlsghk45
    key-store-type: PKCS12
    key-alias: bns-ssl
  port: 8443


# 운영환경
---
spring:
  profiles: production
  batch:
    job:
      enabled: false
  #이미지등 자원 경로
  HWresource:
    HWimages: /home/ec2-user/app/pro/Hangbok_Watch_Production/HangbokWatch_Resource/HWimages/

logging:
  # file:
  max-history: 5
  path: /home/ec2-user/app/pro/Hangbok_Watch_Production/HangbokWatch_Resource/LOGS/
  level:
    root: info
    com.hangbokwatch.backend.service: debug
    com.hangbokwatch.backend.job: debug
    com.hangbokwatch.backend.config: debug
    org.hibernate: error
    sql: info


### pro1
---
server:
  port: 8081
spring:
  profiles: pro1
  batch:
    job:
      enabled: false
  #이미지등 자원 경로
  HWresource:
    HWimages: /home/ec2-user/app/pro/Hangbok_Watch_Production/HangbokWatch_Resource/HWimages/

logging:
  # file:
  max-history: 5
  path: /home/ec2-user/app/pro/Hangbok_Watch_Production/HangbokWatch_Resource/LOGS/
  level:
    root: info
    com.hangbokwatch.backend.service: debug
    com.hangbokwatch.backend.job: debug
    com.hangbokwatch.backend.config: debug
    org.hibernate: error
    sql: info

### pro2
---
server:
  port: 8082
spring:
  profiles: pro2
  batch:
    job:
      enabled: false
  #이미지등 자원 경로
  HWresource:
    HWimages: /home/ec2-user/app/pro/Hangbok_Watch_Production/HangbokWatch_Resource/HWimages/

logging:
  # file:
  max-history: 5
  path: /home/ec2-user/app/pro/Hangbok_Watch_Production/HangbokWatch_Resource/LOGS/
  level:
    root: info
    com.hangbokwatch.backend.service: debug
    com.hangbokwatch.backend.job: debug
    com.hangbokwatch.backend.config: debug
    org.hibernate: error
    sql: info


### DB 설정
---
spring:
  profiles: real-db
  datasource:
    hikari:
      jdbc-url: jdbc:postgresql://hangbok-watch-db.c6shpgnskepj.ap-northeast-2.rds.amazonaws.com:5432/hangbokwatch
      username: kyun_admin
      password: accurate45
      driver-class-name: org.postgresql.Driver
      connection-timeout: 99999
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.lob.non_contextual_creation: true
    show-sql: false
    hibernate:
      ddl-auto: none
    generate-ddl: false
  h2:
    console:
      enabled: true
  data:
    cassandra:
      read-timeout: 99999

### Oauth설정
---
spring:
  profiles: oauth
  security:
    oauth2:
      client:
        registration:
          blizzard:
            client-id: c66e6eea5aca4886bba672ad32e5375c
            client-secret: I2l9DfLZVohT9XZjJQ4L5QGyhEqa99sK
            redirect-uri: http://www.hangbok-watch.com/login/oauth2/code/blizzard
            authorization-grant-type: authorization_code
            scope: openid
            client-name: Blizzard
        provider:
          blizzard:
            authorization-uri: https://kr.battle.net/oauth/authorize
            token-uri: https://kr.battle.net/oauth/token
            user-info-uri: https://kr.battle.net/oauth/userinfo
            jwk-set-uri: https://kr.battle.net/oauth/jwks/certs
